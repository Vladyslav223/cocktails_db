{"version":3,"sources":["components/Header/index.jsx","components/Form/index.jsx","components/Menu/Menu.jsx","store/actions.js","components/Menu/index.js","components/Content/Cocktail/index.jsx","components/Preload/index.jsx","components/Content/Content.jsx","components/Content/index.js","components/App/App.jsx","components/App/index.js","reducers/data.js","reducers/filters.js","reducers/filteredCat.js","reducers/finish.js","reducers/index.js","api.js","sagas/saga.js","store/store.js","index.jsx"],"names":["Header","className","src","alt","Form","props","handleSubmit","filters","handleApply","num","onSubmit","values","categoriesWithPhotos","Object","keys","forEach","key","filter","find","newFilter","strCategory","push","items","length","map","title","Fragment","Field","id","name","type","component","htmlFor","Button","color","style","background","borderRadius","width","variant","reduxForm","form","initialValues","Menu","filteredCat","ACTION_TYPES","START_LOADING","RECEIVE_FILTERS","RECEIVE_CATEGORIES","APPLY_FILTERS","FINISH_LOADING","recievFilters","recievCategories","data","mapDispatchToProps","connect","state","Cocktail","image","PreLoad","Content","finish","resultFilters","category","photos","photo","idDrink","strDrink","strDrinkThumb","isLoading","App","useEffect","startLoading","createRootReducer","combineReducers","formReducer","fetchFilters","axios","get","then","res","drinks","fetchCategories","promises","element","myUrl","all","results","index","getApiFilters","getApiCategories","finishLoadingCategories","mySaga","getFilters","call","put","console","log","select","takeEvery","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27e09206.chunk.js","sourcesContent":["import React from 'react';\n\nimport './index.scss';\n\nconst Header = () => (\n  <header className=\"header\">\n    <h1 className=\"header__h1\">Cocktails DB</h1>\n    <img src=\"/cocktails_db/logo.png\" className=\"header__logo\" alt=\"logo\" />\n  </header>\n);\n\n\nexport default Header;\n","/* eslint-disable no-class-assign */\n/* eslint-disable quote-props */\n/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { reduxForm, Field } from 'redux-form';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nfunction Form(props) {\n  const {\n    handleSubmit,\n    filters,\n    handleApply,\n  } = props;\n\n  const submit = (values) => {\n    const categoriesWithPhotos = [];\n    Object.keys(values).forEach((key) => {\n      if (values[key]) {\n        const filter = filters.find((newFilter) => newFilter.strCategory === key);\n        categoriesWithPhotos.push({ strCategory: key, items: filter.items });\n      }\n    });\n\n    handleApply(categoriesWithPhotos);\n  };\n\n  let num = 0;\n  return (\n    <form className=\"form\" onSubmit={handleSubmit(submit)}>\n      {filters.length && filters.map((filter) => {\n        num += 1;\n        const title = filter.strCategory;\n        return (\n          <React.Fragment key={title}>\n            <Field\n              className=\"input\"\n              id={`input${num}`}\n              name={title}\n              type=\"checkbox\"\n              component=\"input\"\n            />\n            <label className=\"input\" htmlFor={`input${num}`}>{title}</label>\n            <br />\n          </React.Fragment>\n        );\n      })}\n      <Button\n        type=\"submit\"\n        color=\"primary\"\n        className=\"submit\"\n        style={{\n          background: '#4E4E4E',\n          borderRadius: '10px',\n          color: '#fff',\n          width: '180px',\n        }}\n        variant=\"contained\"\n      >\n        Apply\n      </Button>\n    </form>\n  );\n}\n\nexport default Form = reduxForm({\n  form: 'group',\n  initialValues: {\n    'Ordinary Drink': true,\n    'Milk / Float / Shake': true,\n    'Cocktail': true,\n    'Other/Unknown': true,\n    'Cocoa': true,\n    'Shot': true,\n    'Coffee / Tea': true,\n    'Homemade Liqueur': true,\n    'Punch / Party Drink': true,\n    'Beer': true,\n    'Soft Drink / Soda': true,\n  },\n})(Form);\n\nForm.propTypes = {\n  handleSubmit: PropTypes.any,\n  handleApply: PropTypes.func.isRequired,\n  filters: PropTypes.any.isRequired,\n};\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Form from '../Form';\nimport './index.scss';\n\nconst Menu = (props) => {\n  const {\n    filters, handleApply, filteredCat,\n  } = props;\n\n  return (\n    <div className=\"menu\">\n      <Form filteredCat={filteredCat} handleApply={handleApply} filters={filters} />\n    </div>\n  );\n};\nexport default Menu;\n\nMenu.propTypes = {\n  filters: PropTypes.any.isRequired,\n  handleApply: PropTypes.func.isRequired,\n  filteredCat: PropTypes.any.isRequired,\n};\n","\nexport const ACTION_TYPES = {\n  START_LOADING: 'START_LOADING',\n  RECEIVE_FILTERS: 'RECEIVE_FILTERS',\n  RECEIVE_CATEGORIES: 'RECEIVE_CATEGORIES',\n  APPLY_FILTERS: 'APPLY_FILTERS',\n  FINISH_LOADING: 'FINISH_LOADING',\n};\n\nconst {\n  START_LOADING,\n  RECEIVE_FILTERS,\n  RECEIVE_CATEGORIES,\n  APPLY_FILTERS,\n  FINISH_LOADING,\n} = ACTION_TYPES;\n\nexport const startLoading = () => ({ type: START_LOADING });\nexport const recievFilters = (filters) => ({ type: RECEIVE_FILTERS, filters });\nexport const recievCategories = (data) => ({ type: RECEIVE_CATEGORIES, data });\nexport const handleApply = (filteredCat) => ({ type: APPLY_FILTERS, filteredCat });\nexport const finishLoading = () => ({ type: FINISH_LOADING });\n","import { connect } from 'react-redux';\n\nimport Menu from './Menu';\nimport { handleApply } from '../../store/actions';\n\nconst mapStateToProps = (state) => ({\n  filters: state.filters, filteredCat: state.filteredCat,\n});\n\nconst mapDispatchToProps = {\n  handleApply,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Menu);\n","import React from 'react';\n\nimport './index.scss';\n\nfunction Cocktail(props) {\n  const { title, image } = props;\n  return (\n    <div className=\"cocktail\">\n      <img className=\"cocktail__img\" src={image} alt=\"cocktail\" />\n      <span className=\"cocktail__title\">{title}</span>\n    </div>\n  );\n}\n\nexport default Cocktail;\n","import React from 'react';\nimport './index.scss';\n\n\nconst PreLoad = () => (\n  <div className=\"lds-ellipsis\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default PreLoad;\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Cocktail from './Cocktail';\nimport PreLoad from '../Preload';\nimport './index.scss';\n\n\nconst Content = (props) => {\n  const {\n    data,\n    filteredCat,\n    finish,\n  } = props;\n\n  const resultFilteredCat = Object.keys(filteredCat).length && filteredCat;\n  const resultFilters = resultFilteredCat || data;\n\n  return (\n    <div className=\"content-wrap\">\n      { finish ? (<PreLoad />) : (resultFilters.length && resultFilters.map((filter) => {\n        const category = filter.strCategory;\n        const photos = filter.items;\n\n        return (!filteredCat || category) && (\n          <div key={category} className=\"category\">\n            <h2 className=\"content__h2\">{category}</h2>\n            <div className=\"content\">\n              {\n               photos && photos.map((photo) => (\n                 <Cocktail key={photo.idDrink} title={photo.strDrink} image={photo.strDrinkThumb} />\n               ))\n              }\n            </div>\n          </div>\n        );\n      }))}\n    </div>\n  );\n};\n\nContent.propTypes = {\n  data: PropTypes.any.isRequired,\n  filteredCat: PropTypes.any.isRequired,\n  finish: PropTypes.bool.isRequired,\n};\n\nexport default Content;\n","import { connect } from 'react-redux';\n\nimport Content from './Content';\n\nconst mapStateToProps = (state) => ({\n  filteredCat: state.filteredCat,\n  data: state.data,\n  finish: state.finish.isLoading,\n});\n\nexport default connect(\n  mapStateToProps,\n)(Content);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport 'normalize.css';\nimport Header from '../Header/index';\nimport Menu from '../Menu';\nimport Content from '../Content';\n\nimport './App.scss';\n\nconst App = (props) => {\n  useEffect(() => {\n    props.startLoading();\n  });\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"flex-wrap\">\n        <Menu />\n        <Content />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\nApp.propTypes = {\n  startLoading: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\nimport App from './App';\nimport { startLoading } from '../../store/actions';\n\nconst mapDispatchToProps = {\n  startLoading,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(App);\n","import { ACTION_TYPES } from '../store/actions';\n\nconst { RECEIVE_CATEGORIES } = ACTION_TYPES;\n\nexport default (state = {}, { type, data }) => {\n  switch (type) {\n    case RECEIVE_CATEGORIES:\n      return data;\n    default:\n      return state;\n  }\n};\n","import { ACTION_TYPES } from '../store/actions';\n\nconst { RECEIVE_FILTERS } = ACTION_TYPES;\n\nexport default (state = {}, { type, filters }) => {\n  switch (type) {\n    case RECEIVE_FILTERS:\n      return filters;\n\n    default:\n      return state;\n  }\n};\n","import { ACTION_TYPES } from '../store/actions';\n\nconst { APPLY_FILTERS } = ACTION_TYPES;\n\nexport default (state = {}, { type, filteredCat }) => {\n  switch (type) {\n    case APPLY_FILTERS:\n      return filteredCat;\n    default:\n      return state;\n  }\n};\n","import { ACTION_TYPES } from '../store/actions';\n\nconst { FINISH_LOADING } = ACTION_TYPES;\n\nexport default (state = { isLoading: true }, { type }) => {\n  switch (type) {\n    case FINISH_LOADING:\n      return {\n        ...state,\n        isLoading: false,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport data from './data';\nimport filters from './filters';\nimport filteredCat from './filteredCat';\nimport finish from './finish';\n\nconst createRootReducer = () => combineReducers({\n  filters,\n  data,\n  filteredCat,\n  form: formReducer,\n  finish,\n});\n\nexport default createRootReducer;\n","import axios from 'axios';\n\nexport function fetchFilters() {\n  const API_FILTERS = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\n  return axios.get(API_FILTERS).then((res) => res.data.drinks);\n}\n\nexport function fetchCategories(filters) {\n  const urlMockup = 'https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=';\n  const promises = filters.map((element) => {\n    const myUrl = urlMockup + element.strCategory;\n    return axios.get(myUrl);\n  });\n\n  return axios.all(promises).then((results) => filters.map((filter, index) => {\n    // eslint-disable-next-line no-param-reassign\n    filter.items = results[index].data.drinks;\n    return filter;\n  }));\n}\n","import {\n  takeEvery,\n  call,\n  put,\n  select,\n} from 'redux-saga/effects';\nimport {\n  recievCategories,\n  recievFilters,\n  finishLoading,\n  ACTION_TYPES,\n} from '../store/actions';\n\nimport { fetchCategories, fetchFilters } from '../api';\n\nconst getFilters = (state) => state.filters;\n\nfunction* getApiFilters() {\n  try {\n    const filters = yield call(fetchFilters);\n    yield put(recievFilters(filters));\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* getApiCategories() {\n  try {\n    const filters = yield select(getFilters);\n    const data = yield call(() => fetchCategories(filters));\n    yield put(recievCategories(data));\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction* finishLoadingCategories() {\n  yield put(finishLoading());\n}\n\nexport default function* mySaga() {\n  yield takeEvery(ACTION_TYPES.START_LOADING, getApiFilters);\n  yield takeEvery(ACTION_TYPES.RECEIVE_FILTERS, getApiCategories);\n  yield takeEvery(ACTION_TYPES.RECEIVE_CATEGORIES, finishLoadingCategories);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport createRootReducer from '../reducers';\nimport mySaga from '../sagas/saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  createRootReducer(),\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware),\n  ),\n);\n\nsagaMiddleware.run(mySaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n"],"sourceRoot":""}